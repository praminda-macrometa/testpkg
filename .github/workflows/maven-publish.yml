# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Release

on: 
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Version to be released. (must follow semver)'     
        required: true
        default: 'x.y.z'
      developmentVersion:
        required: true
        description: 'Version in pom files after the release. (must have suffix -SNAPSHOT)'
        default: 'x.y.z-SNAPSHOT'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'main'
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup git user
      run: |
        cat $GITHUB_WORKSPACE/settings.xml
        echo ${{ github.actor }} : $(printf "%0.s*" {1..$#{{ github.token }})
        echo $GITHUB_ACTOR : $(printf "%0.s*" {1..$#GITHUB_TOKEN})
        git config --global user.email "gh-actions@macrometa.io"
        git config --global user.name "Github Actions"

    - name: Maven release
      shell: bash
      run: |
        mvn -B -Dtag=v${{ github.event.inputs.releaseVersion }} release:prepare release:perform -s $GITHUB_WORKSPACE/settings.xml -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }}
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ github.token }}
